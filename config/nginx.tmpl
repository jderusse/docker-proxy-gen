{{ define "host" }}
    {{ $address := where .Container.Addresses "Port" "80" | first }}
    {{ if $address }}
# Container {{ .Container.Name }}
server {
    server_name {{ .Host }} *.{{ .Host }};
    location / {
        proxy_pass http://{{ $address.IP }};
    }
}
    {{ end }}
{{ end }}

map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';

access_log /proc/self/fd/1 vhost;
error_log /proc/self/fd/2;

# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;

server {
    server_name _;
    listen 80;
    return 503;
}

{{ $host := or ($.Env.HOST) "docker" }}
{{ $skip_compose_project := or ($.Env.SKIP_COMPOSE_PROJECT) "" }}
{{ $skip_compose_service := or ($.Env.SKIP_COMPOSE_SERVICE) "" }}
{{ range $index, $container := $ }}
    {{ $hosts := coalesce $container.Name (print "*." $container.Name) }}
    {{ $host_part := split $container.Name "_" }}
    {{ $host_part_len := len $host_part }}
    {{ if eq $host_part_len 3 }}
        {{ $last := (index $host_part 2) }}
        {{ if eq $last "1" }}
            {{ if $skip_compose_project }}
                {{ if $skip_compose_service }}
                    {{ template "host" (dict "Container" $container "Host" (print $host)) }}
                {{ else }}
                    {{ template "host" (dict "Container" $container "Host" (print (index $host_part 1) "." $host)) }}
                {{ end }}
            {{ else }}
                {{ if $skip_compose_service }}
                    {{ template "host" (dict "Container" $container "Host" (print (index $host_part 0) "." $host)) }}
                {{ else }}
                    {{ template "host" (dict "Container" $container "Host" (print (index $host_part 1) "." (index $host_part 0) "." $host)) }}
                {{ end }}
            {{ end }}
        {{ else }}
            {{ template "host" (dict "Container" $container "Host" (print $container.Name "." $host)) }}
        {{ end }}
    {{ else }}
        {{ template "host" (dict "Container" $container "Host" (print $container.Name "." $host)) }}
    {{ end }}
{{ end }}
